[project]
name = "kolena"
version = "0.999.0"  # version is automatically set to latest git tag during release process
description = "Client for Kolena's machine learning testing platform."
authors = [
    { name = "Kolena Engineering", email = "eng@kolena.com" }
]
homepage = "https://kolena.com"
documentation = "https://docs.kolena.com"
readme = "README.md"
license = "Apache-2.0"
keywords = ["Kolena", "ML", "testing"]
classifiers = [# classifiers for license, versions set automatically during Poetry build
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Testing",
    "Typing :: Typed"
]
packages = [
    { include = "kolena" }
]
requires-python = ">=3.8,<3.13"

dependencies = [
    "numpy >=1.19,<2; python_version < '3.12'",
    "numpy >=1.26,<2; python_version >= '3.12'",
    "pandas >=1.1,<3; python_version < '3.12'",
    "pandas >=2.1.1,<3; python_version >= '3.12'",
    "pandera>=0.9,<1",
    "pydantic>=1.10,<3",
    "dacite>=1.6,<2",
    "requests>=2.20,<3",
    "requests-toolbelt>=1.0.0,<2",
    "tqdm>=4,<5",
    "Pillow>=10.0.1,<11",
    "retrying>=1.3.3,<2",
    "Shapely>=1.8.5,<3",
    "termcolor>=1.1,<3",
    "pyarrow>=8",
    "click>=8",
    "lzstring>=1.0.4,<2",
]

[project.optional-dependencies]
metrics = [
    "scikit-learn>=1.2,<2",
    "scipy >=1,<2",
]

[project.scripts]
kolena = 'kolena._utils.cli:run'

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
exclude = ["docs", "examples", "tests"]

[tool.pytest.ini_options]
# do not scan 'kolena' for tests, as there are many functions/classes that look like tests
norecursedirs = "kolena"
# explicitly disable test classes such that e.g. TestRun is not interpreted as a test
python_classes = []
# only collect functions starting with 'test__'
python_functions = ["test__*"]
markers = [
    "metrics: tests that require the metrics extra dependency such as sklearn",
]

[tool.uv]
environments = ["python_version < '3.12'", "python_version >= '3.12' and python_version < '3.13'"]
dev-dependencies = [
    "black>=22.1.0,<23",
    "pre-commit>=2.17,<3",
    "pytest>=7,<8",
    "pytest-cov>=4.0.0,<5",
    "pytest-depends>=1.0.1,<2",
    "mkdocs>=1.4.3,<2",
    "cairosvg>=2.7.0,<3",
    # insiders fork installed out-of-band in docs/setup_insiders.sh
    "mkdocs-material>=9.2,<10",
    "mkdocstrings>=0.25,<1",
    "mkdocstrings-python>=1.11.1,<2",
    "mkdocs-git-committers-plugin-2>=1,<2",
    "mkdocs-git-revision-date-localized-plugin>=1,<2",
]

[tool.uv.sources]
mkdocs-material = { git = "ssh://git@github.com/kolenaIO/mkdocs-material-insiders.git" }
mkdocstrings-python = { git = "ssh://git@github.com/kolenaIO/mkdocstrings-python.git" }
