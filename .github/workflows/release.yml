name: Release

on:
  push:
    branches:
      - gh/release-0.69.0
    tags:
      - "*"

jobs:
  release:
    name: Build and publish release of kolena Python package and documentation
    env:
      ASSET_BUCKET: kolena-client-assets
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Install Poetry
        run: pip install poetry==1.2.2

      - name: Fetch tags to enable autoversioning
        run: git fetch --prune --unshallow --tags

      - name: Update package version to PEP 440-compliant production release tag
        run: poetry version $(git describe --tags --abbrev=0)

      - name: Install dependencies
        run: poetry install

      - name: Run pre-commit checks
        run: poetry run pre-commit run -a

      - name: Build 'kolena' Python package
        run: poetry build --format=sdist

      - name: Build 'kolena' documentation and push to S3
        run: |
          ./render.sh
          VERSION=$(poetry run python3 -c "import kolena; print(kolena.__version__)")

          BUCKET_PATH="s3://$ASSET_BUCKET/docs/$VERSION"
          echo "pushing documentation to '$BUCKET_PATH'..."
          aws s3 rm --recursive "$BUCKET_PATH"
          aws s3 sync ./build "$BUCKET_PATH"

          BUCKET_PATH="s3://$ASSET_BUCKET/docs/latest"
          echo "pushing documentation to '$BUCKET_PATH'..."
          aws s3 rm --recursive "$BUCKET_PATH"
          aws s3 sync ./build "$BUCKET_PATH"
        working-directory: ./docs

      # - name: Push 'kolena' dist to Test PyPI
      #   uses: pypa/gh-action-pypi-publish@release/v1
      #   with:
      #     password: ${{ secrets.TEST_PYPI_API_TOKEN }}
      #     repository-url: https://test.pypi.org/legacy/

      # - name: Push 'kolena' dist to PyPI
      #   uses: pypa/gh-action-pypi-publish@release/v1
      #   with:
      #     password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Create GitHub release with 'kolena' build as artifact
        uses: marvinpinto/action-automatic-releases@v1.2.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          files: |
            ./dist/*.tar.gz

      #
      # backcompat: build and publish 'kolena-client' package
      #

      - name: Build 'kolena-client' package for backward compatibility
        run: |
          rm -rf ./dist

          # update first instance of 'kolena' to 'kolena-client' in pyproject.toml, kolena/__init__.py (package name)
          sed -i '0,/kolena/{s/kolena/kolena-client/}' pyproject.toml kolena/__init__.py

          poetry install
          poetry build --format=sdist

      - name: Install twine for package distribution on CodeArtifact for backward compatibility
        run: pip install twine

      - name: Push 'kolena-client' dist to trunk CodeArtifact for backward compatibility
        run: |
          aws codeartifact login --tool twine --domain trunk --domain-owner 328803196297 --repository kolena-client
          twine upload --skip-existing --repository codeartifact ./dist/kolena_client*

      - name: Push 'kolena-client' dist to Test PyPI for backward compatibility
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/

      - name: Push 'kolena-client' dist to production CodeArtifact for backward compatibility
        run: |
          aws codeartifact login --tool twine --domain production --domain-owner 328803196297 --repository kolena-client
          twine upload --skip-existing --repository codeartifact ./dist/kolena_cilent*

      - name: Push 'kolena-client' dist to PyPI for backward compatibility
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
